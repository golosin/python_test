{"uid":"78a4ae076e14734a","name":"test_create_delete_yml_feed","fullName":"test_t4.test_common_bases.test_6_save_delete_yml_feed#test_create_delete_yml_feed","historyId":"a37ba0e417b7bf06b60a48ad6cbd2246","time":{"start":1654457494843,"stop":1654457517931,"duration":23088},"description":"\n     1) Авторизация в системе T4MP.v2\n     2) Выбор пайплайна и МП\n     3) Открытие \"Feeds list\"\n     4) Нажатие кнопки \"Add feed\"\n     5) Открытие списка \"File type\"\n     6) Выбор типа \"Yandex Feed\"\n     7) Заполнение поля \"Name\"\n     8) Заполнение поля \"Url products\"\n     9) Заполнение поля \"Url prices\"\n    10) Заполнение поля \"Url stocks\"\n    11) Нажатие кнопки \"Save\"\n    12) Возврат на \"Feeds list\"\n    13) Возврат в \"Edit feed config\"\n    14) Проверка сохраненного \"Url products\"\n    15) Проверка сохраненного \"Url prices\"\n    16) Проверка сохраненного \"Url stocks\"\n    17) Проверка сохраненного \"Name\" фида\n    ","descriptionHtml":"<pre><code> 1) Авторизация в системе T4MP.v2\n 2) Выбор пайплайна и МП\n 3) Открытие &quot;Feeds list&quot;\n 4) Нажатие кнопки &quot;Add feed&quot;\n 5) Открытие списка &quot;File type&quot;\n 6) Выбор типа &quot;Yandex Feed&quot;\n 7) Заполнение поля &quot;Name&quot;\n 8) Заполнение поля &quot;Url products&quot;\n 9) Заполнение поля &quot;Url prices&quot;\n10) Заполнение поля &quot;Url stocks&quot;\n11) Нажатие кнопки &quot;Save&quot;\n12) Возврат на &quot;Feeds list&quot;\n13) Возврат в &quot;Edit feed config&quot;\n14) Проверка сохраненного &quot;Url products&quot;\n15) Проверка сохраненного &quot;Url prices&quot;\n16) Проверка сохраненного &quot;Url stocks&quot;\n17) Проверка сохраненного &quot;Name&quot; фида\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5605c4384f33 <unknown>\n#1 0x5605c40cf118 <unknown>\n#2 0x5605c41053f7 <unknown>\n#3 0x5605c41055c1 <unknown>\n#4 0x5605c41385c4 <unknown>\n#5 0x5605c4122f9d <unknown>\n#6 0x5605c41362e4 <unknown>\n#7 0x5605c4122e63 <unknown>\n#8 0x5605c40f882a <unknown>\n#9 0x5605c40f9985 <unknown>\n#10 0x5605c43c94cd <unknown>\n#11 0x5605c43cd5ec <unknown>\n#12 0x5605c43b371e <unknown>\n#13 0x5605c43ce238 <unknown>\n#14 0x5605c43a8870 <unknown>\n#15 0x5605c43ea608 <unknown>\n#16 0x5605c43ea788 <unknown>\n#17 0x5605c4404f1d <unknown>\n#18 0x7f2166026609 <unknown>","statusTrace":"get_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8cb8683609d6fba8b4cdfd86b4705de4\")>\nget_init_data = {'GF_desktop_location': '/test_data_Googlefeed/GFtest.xml', 'GF_name_feed': 'Google_feed_auto_test', 'GF_url_location': 'https://test.com', 'csv_desktop_location': '/test_data_CSV_feed/CSVtest.xml', ...}\n\n    @allure.feature('Базовое тестирование')\n    @allure.story('6) Создание/удаление YML фида')\n    @allure.severity('critical')\n    def test_create_delete_yml_feed(get_driver, get_init_data):\n        \"\"\"\n         1) Авторизация в системе T4MP.v2\n         2) Выбор пайплайна и МП\n         3) Открытие \"Feeds list\"\n         4) Нажатие кнопки \"Add feed\"\n         5) Открытие списка \"File type\"\n         6) Выбор типа \"Yandex Feed\"\n         7) Заполнение поля \"Name\"\n         8) Заполнение поля \"Url products\"\n         9) Заполнение поля \"Url prices\"\n        10) Заполнение поля \"Url stocks\"\n        11) Нажатие кнопки \"Save\"\n        12) Возврат на \"Feeds list\"\n        13) Возврат в \"Edit feed config\"\n        14) Проверка сохраненного \"Url products\"\n        15) Проверка сохраненного \"Url prices\"\n        16) Проверка сохраненного \"Url stocks\"\n        17) Проверка сохраненного \"Name\" фида\n        \"\"\"\n    \n        driver = get_driver\n        dict_init_data = get_init_data\n        dict_xpath_login = init_dict_xpath_login(dict_init_data)\n        dict_xpath_product_feed = init_dict_xpath_product_feed(dict_init_data)\n        dict_xpath_base = init_dict_xpath_base(dict_init_data)\n    \n        # Авторизация\n        login_T4(driver, dict_init_data, dict_xpath_login)\n    \n        # 2) Выбор пайплайна и МП\n        choice_pipeline_mp(driver, dict_xpath_base, dict_xpath_product_feed)\n    \n        # 3) общая страница -> Feeds list (клик)\n        prod_feed = wait_of_element_located(dict_xpath_product_feed['1'], driver)\n        prod_feed.click()\n        # time.sleep(3)\n    \n        # 4) Feeds list -> \"Add feed\" (клик)\n        add_feed = wait_of_element_located(dict_xpath_product_feed['2'], driver)\n        add_feed.click()\n        # time.sleep(3)\n    \n        # 5) Add feed config -> \"File type\" (клик)\n        type_file = wait_of_element_located(dict_xpath_product_feed['7.0'], driver)\n        type_file.click()\n        # time.sleep(3)\n    \n        # 6) Add feed config -> \"File type\" (Yandex Feed) (клик)\n        type_file_yml = wait_of_element_located(dict_xpath_product_feed['7.2'], driver)\n        type_file_yml.click()\n        # time.sleep(3)\n    \n        # 7) Add feed config -> \"Name\" (ввод)\n        name_input = wait_of_element_located(dict_xpath_product_feed['3'], driver)\n        name_input.send_keys(dict_init_data[\"yml_name_feed\"])\n        # time.sleep(3)\n    \n        # 8) Add feed config -> \"Url products\" (ввод)\n        url_input = wait_of_element_located(dict_xpath_product_feed['4'], driver)\n        url_input.send_keys(dict_init_data[\"yml_url_location\"])\n        # time.sleep(3)\n    \n        # 9) Add feed config -> \"Url prices\" (ввод)\n        url_input = wait_of_element_located(dict_xpath_product_feed['5'], driver)\n        url_input.send_keys(dict_init_data[\"yml_url_location\"])\n        # time.sleep(3)\n    \n        # 10) Add feed config -> \"Url stocks\" (ввод)\n        url_input = wait_of_element_located(dict_xpath_product_feed['6'], driver)\n        url_input.send_keys(dict_init_data[\"yml_url_location\"])\n        # time.sleep(3)\n    \n        # 11) Add feed config -> \"Save\" (клик)\n        button_save_feed = wait_of_element_located(dict_xpath_product_feed['8'], driver)\n        button_save_feed.click()\n        time.sleep(3)\n    \n        # 12) Add feed config -> Feeds list (клик)\n        arrow_left = wait_of_element_located(dict_xpath_product_feed['10'], driver)\n        arrow_left.click()\n        # time.sleep(3)\n    \n        # 13) Feeds list -> Edit feed config (клик)\n>       table_edit = wait_of_element_located(dict_xpath_product_feed['12'], driver)\n\ntest_t4/test_common_bases/test_6_save_delete_yml_feed.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nBase/Base_functions.py:8: in wait_of_element_located\n    element = WebDriverWait(driver_init, 15).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8cb8683609d6fba8b4cdfd86b4705de4\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f0f34681a20>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5605c4384f33 <unknown>\nE       #1 0x5605c40cf118 <unknown>\nE       #2 0x5605c41053f7 <unknown>\nE       #3 0x5605c41055c1 <unknown>\nE       #4 0x5605c41385c4 <unknown>\nE       #5 0x5605c4122f9d <unknown>\nE       #6 0x5605c41362e4 <unknown>\nE       #7 0x5605c4122e63 <unknown>\nE       #8 0x5605c40f882a <unknown>\nE       #9 0x5605c40f9985 <unknown>\nE       #10 0x5605c43c94cd <unknown>\nE       #11 0x5605c43cd5ec <unknown>\nE       #12 0x5605c43b371e <unknown>\nE       #13 0x5605c43ce238 <unknown>\nE       #14 0x5605c43a8870 <unknown>\nE       #15 0x5605c43ea608 <unknown>\nE       #16 0x5605c43ea788 <unknown>\nE       #17 0x5605c4404f1d <unknown>\nE       #18 0x7f2166026609 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:87: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_webdriver","time":{"start":1654457492139,"stop":1654457492760,"duration":621},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_chrome_options","time":{"start":1654457492139,"stop":1654457492139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_init_data","time":{"start":1654457492760,"stop":1654457492761,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_driver","time":{"start":1654457492761,"stop":1654457494842,"duration":2081},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"get_driver::0","time":{"start":1654457517967,"stop":1654457518031,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"6) Создание/удаление YML фида"},{"name":"severity","value":"critical"},{"name":"feature","value":"Базовое тестирование"},{"name":"parentSuite","value":"test_t4.test_common_bases"},{"name":"suite","value":"test_6_save_delete_yml_feed"},{"name":"host","value":"fv-az128-321"},{"name":"thread","value":"2667-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_t4.test_common_bases.test_6_save_delete_yml_feed"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"78a4ae076e14734a.json","parameterValues":[]}