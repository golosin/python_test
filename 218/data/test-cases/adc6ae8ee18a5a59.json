{"uid":"adc6ae8ee18a5a59","name":"7) Импорт YML фида (без вариантов)","fullName":"test_t4.test_functional.test_7_add_feed_checkin_feed_product#test_add_feed_checkin_feed_product","historyId":"312fe290b4f7269baa15fd0d82420508","time":{"start":1657521742236,"stop":1657521768316,"duration":26080},"description":"\n     1) Авторизация в системе T4MP.v2\n     2) Выбор пайплайна и МП\n     3) Открытие \"Feeds list\"\n     4) Нажатие кнопки \"Add feed\"\n     5) Открытие списка \"File type\"\n     6) Выбор типа \"Yandex Feed\"\n     7) Заполнение поля \"Url\" для \"Product source\"\n     8) Нажатие кнопки \"Save\"\n     9) Ожидание когда пропадет элемент \"Feed config save\"\n    10) Нажатие кнопки \"Load products\"\n    11) Ожидание когда пропадет элемент \"Feed product import started\"\n    12) Закрытие \"Add feed config\"\n    13) Открытие \"Product feed\"\n    14) Ввод в поле \"Search\" названия добавленного продукта\n    15) Поиск в \"Feed products\" добавленного товара по дате добавления\n    16) Проверка значения \"id\" в таблице и в YML feed\n    17) Проверка значения \"Product\" в таблице и \"name\" в YML feed\n    18) Проверка значения \"Sale\" в таблице и \"oldprice\" в YML feed\n    19) Проверка значения \"Vendor\" в таблице и в YML feed\n    20) Проверка значения \"Stock\" в таблице и в YML feed\n    21) Открытие карточки импортированного товара\n    ","descriptionHtml":"<pre><code> 1) Авторизация в системе T4MP.v2\n 2) Выбор пайплайна и МП\n 3) Открытие &quot;Feeds list&quot;\n 4) Нажатие кнопки &quot;Add feed&quot;\n 5) Открытие списка &quot;File type&quot;\n 6) Выбор типа &quot;Yandex Feed&quot;\n 7) Заполнение поля &quot;Url&quot; для &quot;Product source&quot;\n 8) Нажатие кнопки &quot;Save&quot;\n 9) Ожидание когда пропадет элемент &quot;Feed config save&quot;\n10) Нажатие кнопки &quot;Load products&quot;\n11) Ожидание когда пропадет элемент &quot;Feed product import started&quot;\n12) Закрытие &quot;Add feed config&quot;\n13) Открытие &quot;Product feed&quot;\n14) Ввод в поле &quot;Search&quot; названия добавленного продукта\n15) Поиск в &quot;Feed products&quot; добавленного товара по дате добавления\n16) Проверка значения &quot;id&quot; в таблице и в YML feed\n17) Проверка значения &quot;Product&quot; в таблице и &quot;name&quot; в YML feed\n18) Проверка значения &quot;Sale&quot; в таблице и &quot;oldprice&quot; в YML feed\n19) Проверка значения &quot;Vendor&quot; в таблице и в YML feed\n20) Проверка значения &quot;Stock&quot; в таблице и в YML feed\n21) Открытие карточки импортированного товара\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559c8ac12b13 <unknown>\n#1 0x559c8aa19688 <unknown>\n#2 0x559c8aa50cc7 <unknown>\n#3 0x559c8aa50e91 <unknown>\n#4 0x559c8aa83e34 <unknown>\n#5 0x559c8aa6e8dd <unknown>\n#6 0x559c8aa81b94 <unknown>\n#7 0x559c8aa6e7a3 <unknown>\n#8 0x559c8aa440ea <unknown>\n#9 0x559c8aa45225 <unknown>\n#10 0x559c8ac5a2dd <unknown>\n#11 0x559c8ac5e2c7 <unknown>\n#12 0x559c8ac4422e <unknown>\n#13 0x559c8ac5f0a8 <unknown>\n#14 0x559c8ac38bc0 <unknown>\n#15 0x559c8ac7b6c8 <unknown>\n#16 0x559c8ac7b848 <unknown>\n#17 0x559c8ac95c0d <unknown>\n#18 0x7faa29742609 <unknown>","statusTrace":"get_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>\nget_init_data = {'GF_desktop_location': '/test_data_Googlefeed/GFtest.xml', 'GF_name_feed': 'Google_feed_auto_test', 'GF_url_location': 'https://test.com', 'csv_desktop_location': '/test_data_CSV_feed/CSVtest.xml', ...}\n\n    @allure.feature('Тест стенд v.'+get_app_version())\n    @allure.story('Функциональное тестирование')\n    @allure.title('7) Импорт YML фида (без вариантов)')\n    @allure.severity('critical')\n    def test_add_feed_checkin_feed_product(get_driver, get_init_data):\n        \"\"\"\n         1) Авторизация в системе T4MP.v2\n         2) Выбор пайплайна и МП\n         3) Открытие \"Feeds list\"\n         4) Нажатие кнопки \"Add feed\"\n         5) Открытие списка \"File type\"\n         6) Выбор типа \"Yandex Feed\"\n         7) Заполнение поля \"Url\" для \"Product source\"\n         8) Нажатие кнопки \"Save\"\n         9) Ожидание когда пропадет элемент \"Feed config save\"\n        10) Нажатие кнопки \"Load products\"\n        11) Ожидание когда пропадет элемент \"Feed product import started\"\n        12) Закрытие \"Add feed config\"\n        13) Открытие \"Product feed\"\n        14) Ввод в поле \"Search\" названия добавленного продукта\n        15) Поиск в \"Feed products\" добавленного товара по дате добавления\n        16) Проверка значения \"id\" в таблице и в YML feed\n        17) Проверка значения \"Product\" в таблице и \"name\" в YML feed\n        18) Проверка значения \"Sale\" в таблице и \"oldprice\" в YML feed\n        19) Проверка значения \"Vendor\" в таблице и в YML feed\n        20) Проверка значения \"Stock\" в таблице и в YML feed\n        21) Открытие карточки импортированного товара\n        \"\"\"\n    \n    \n        driver = get_driver\n        dict_init_data = get_init_data\n        dict_xpath_login = init_dict_xpath_login(dict_init_data)\n        dict_xpath_product_feed = init_dict_xpath_product_feed(dict_init_data)\n        dict_xpath_base = init_dict_xpath_base(dict_init_data)\n        feed_data = parsing_data_feed()\n    \n        # 1) Авторизация\n        login_T4(driver, dict_init_data, dict_xpath_login)\n    \n        # 2) Выбор пайплайна и МП\n        choice_pipeline_mp(driver, dict_xpath_base, dict_xpath_product_feed)\n    \n        # 3) общая страница -> Feeds list (клик)\n        prod_feed = wait_of_element_located('выбор страницы \"Feeds list\"', dict_xpath_product_feed['1'], driver)\n        prod_feed.click()\n    \n        # 4) Feeds list -> \"Add feed\" (клик)\n        add_feed = wait_of_element_located('нажатие кнопки \"Add feed\"', dict_xpath_product_feed['2'], driver)\n        add_feed.click()\n    \n        # 5) Add feed config -> \"File type\" (клик)\n        type_file = wait_of_element_located('выбор списка \"File type\"', dict_xpath_product_feed['7.0'], driver)\n        type_file.click()\n    \n        # 6) Add feed config -> \"File type\" (Yandex Feed) (клик)\n        type_file_yml = wait_of_element_located('выбор из списка \"Yandex Feed\"', dict_xpath_product_feed['7.2'], driver)\n        type_file_yml.click()\n    \n        # 7) Add feed config -> \"Url\" (ввод)\n        url_input = wait_of_element_located('ввод в поле \"Url\" для \"Product source\"', dict_xpath_product_feed['4'], driver)\n        url_input.send_keys(dict_init_data[\"yml_url_location\"])\n    \n        # # 8) \"Price stock same config\" -> off\n        # price_stock_config = wait_of_element_located('выключение \"Price stock same config\"',\n        #                                              dict_xpath_product_feed['3'], driver)\n        # price_stock_config.click()\n    \n        # 8) Add feed config -> \"Save\" (клик)\n        button_save_feed = wait_of_element_located('нажатие кнопки \"Save\"', dict_xpath_product_feed['8'], driver)\n        button_save_feed.click()\n        time.sleep(2)\n    \n        # 9) ожидание когда пропадет эллемент \"Feed config save\"\n        wait_notice_save = wait_of_invisibility_of_element_located('ожидание \"Feed config save\"',\n                                                                   dict_xpath_product_feed['6'], driver)\n    \n        # 10) Add feed config -> \"Load products\"\n>       button_load = wait_of_element_located('нажатие кнопки \"Load products\"', dict_xpath_product_feed['5'], driver)\n\ntest_t4/test_functional/test_7_add_feed_checkin_feed_product.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nBase/Base_functions.py:23: in wait_of_element_located\n    element = WebDriverWait(driver_init, 15).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"afea9827926168d7b80ce40e2ffec1ca\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fbfaecf2e60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x559c8ac12b13 <unknown>\nE       #1 0x559c8aa19688 <unknown>\nE       #2 0x559c8aa50cc7 <unknown>\nE       #3 0x559c8aa50e91 <unknown>\nE       #4 0x559c8aa83e34 <unknown>\nE       #5 0x559c8aa6e8dd <unknown>\nE       #6 0x559c8aa81b94 <unknown>\nE       #7 0x559c8aa6e7a3 <unknown>\nE       #8 0x559c8aa440ea <unknown>\nE       #9 0x559c8aa45225 <unknown>\nE       #10 0x559c8ac5a2dd <unknown>\nE       #11 0x559c8ac5e2c7 <unknown>\nE       #12 0x559c8ac4422e <unknown>\nE       #13 0x559c8ac5f0a8 <unknown>\nE       #14 0x559c8ac38bc0 <unknown>\nE       #15 0x559c8ac7b6c8 <unknown>\nE       #16 0x559c8ac7b848 <unknown>\nE       #17 0x559c8ac95c0d <unknown>\nE       #18 0x7faa29742609 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:90: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_chrome_options","time":{"start":1657521739488,"stop":1657521739489,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_webdriver","time":{"start":1657521739489,"stop":1657521740161,"duration":672},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_init_data","time":{"start":1657521740161,"stop":1657521740162,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_driver","time":{"start":1657521740162,"stop":1657521742235,"duration":2073},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n     1) Авторизация в системе T4MP.v2\n     2) Выбор пайплайна и МП\n     3) Открытие \"Feeds list\"\n     4) Нажатие кнопки \"Add feed\"\n     5) Открытие списка \"File type\"\n     6) Выбор типа \"Yandex Feed\"\n     7) Заполнение поля \"Url\" для \"Product source\"\n     8) Нажатие кнопки \"Save\"\n     9) Ожидание когда пропадет элемент \"Feed config save\"\n    10) Нажатие кнопки \"Load products\"\n    11) Ожидание когда пропадет элемент \"Feed product import started\"\n    12) Закрытие \"Add feed config\"\n    13) Открытие \"Product feed\"\n    14) Ввод в поле \"Search\" названия добавленного продукта\n    15) Поиск в \"Feed products\" добавленного товара по дате добавления\n    16) Проверка значения \"id\" в таблице и в YML feed\n    17) Проверка значения \"Product\" в таблице и \"name\" в YML feed\n    18) Проверка значения \"Sale\" в таблице и \"oldprice\" в YML feed\n    19) Проверка значения \"Vendor\" в таблице и в YML feed\n    20) Проверка значения \"Stock\" в таблице и в YML feed\n    21) Открытие карточки импортированного товара\n    ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559c8ac12b13 <unknown>\n#1 0x559c8aa19688 <unknown>\n#2 0x559c8aa50cc7 <unknown>\n#3 0x559c8aa50e91 <unknown>\n#4 0x559c8aa83e34 <unknown>\n#5 0x559c8aa6e8dd <unknown>\n#6 0x559c8aa81b94 <unknown>\n#7 0x559c8aa6e7a3 <unknown>\n#8 0x559c8aa440ea <unknown>\n#9 0x559c8aa45225 <unknown>\n#10 0x559c8ac5a2dd <unknown>\n#11 0x559c8ac5e2c7 <unknown>\n#12 0x559c8ac4422e <unknown>\n#13 0x559c8ac5f0a8 <unknown>\n#14 0x559c8ac38bc0 <unknown>\n#15 0x559c8ac7b6c8 <unknown>\n#16 0x559c8ac7b848 <unknown>\n#17 0x559c8ac95c0d <unknown>\n#18 0x7faa29742609 <unknown>","statusTrace":"get_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>\nget_init_data = {'GF_desktop_location': '/test_data_Googlefeed/GFtest.xml', 'GF_name_feed': 'Google_feed_auto_test', 'GF_url_location': 'https://test.com', 'csv_desktop_location': '/test_data_CSV_feed/CSVtest.xml', ...}\n\n    @allure.feature('Тест стенд v.'+get_app_version())\n    @allure.story('Функциональное тестирование')\n    @allure.title('7) Импорт YML фида (без вариантов)')\n    @allure.severity('critical')\n    def test_add_feed_checkin_feed_product(get_driver, get_init_data):\n        \"\"\"\n         1) Авторизация в системе T4MP.v2\n         2) Выбор пайплайна и МП\n         3) Открытие \"Feeds list\"\n         4) Нажатие кнопки \"Add feed\"\n         5) Открытие списка \"File type\"\n         6) Выбор типа \"Yandex Feed\"\n         7) Заполнение поля \"Url\" для \"Product source\"\n         8) Нажатие кнопки \"Save\"\n         9) Ожидание когда пропадет элемент \"Feed config save\"\n        10) Нажатие кнопки \"Load products\"\n        11) Ожидание когда пропадет элемент \"Feed product import started\"\n        12) Закрытие \"Add feed config\"\n        13) Открытие \"Product feed\"\n        14) Ввод в поле \"Search\" названия добавленного продукта\n        15) Поиск в \"Feed products\" добавленного товара по дате добавления\n        16) Проверка значения \"id\" в таблице и в YML feed\n        17) Проверка значения \"Product\" в таблице и \"name\" в YML feed\n        18) Проверка значения \"Sale\" в таблице и \"oldprice\" в YML feed\n        19) Проверка значения \"Vendor\" в таблице и в YML feed\n        20) Проверка значения \"Stock\" в таблице и в YML feed\n        21) Открытие карточки импортированного товара\n        \"\"\"\n    \n    \n        driver = get_driver\n        dict_init_data = get_init_data\n        dict_xpath_login = init_dict_xpath_login(dict_init_data)\n        dict_xpath_product_feed = init_dict_xpath_product_feed(dict_init_data)\n        dict_xpath_base = init_dict_xpath_base(dict_init_data)\n        feed_data = parsing_data_feed()\n    \n        # 1) Авторизация\n        login_T4(driver, dict_init_data, dict_xpath_login)\n    \n        # 2) Выбор пайплайна и МП\n        choice_pipeline_mp(driver, dict_xpath_base, dict_xpath_product_feed)\n    \n        # 3) общая страница -> Feeds list (клик)\n        prod_feed = wait_of_element_located('выбор страницы \"Feeds list\"', dict_xpath_product_feed['1'], driver)\n        prod_feed.click()\n    \n        # 4) Feeds list -> \"Add feed\" (клик)\n        add_feed = wait_of_element_located('нажатие кнопки \"Add feed\"', dict_xpath_product_feed['2'], driver)\n        add_feed.click()\n    \n        # 5) Add feed config -> \"File type\" (клик)\n        type_file = wait_of_element_located('выбор списка \"File type\"', dict_xpath_product_feed['7.0'], driver)\n        type_file.click()\n    \n        # 6) Add feed config -> \"File type\" (Yandex Feed) (клик)\n        type_file_yml = wait_of_element_located('выбор из списка \"Yandex Feed\"', dict_xpath_product_feed['7.2'], driver)\n        type_file_yml.click()\n    \n        # 7) Add feed config -> \"Url\" (ввод)\n        url_input = wait_of_element_located('ввод в поле \"Url\" для \"Product source\"', dict_xpath_product_feed['4'], driver)\n        url_input.send_keys(dict_init_data[\"yml_url_location\"])\n    \n        # # 8) \"Price stock same config\" -> off\n        # price_stock_config = wait_of_element_located('выключение \"Price stock same config\"',\n        #                                              dict_xpath_product_feed['3'], driver)\n        # price_stock_config.click()\n    \n        # 8) Add feed config -> \"Save\" (клик)\n        button_save_feed = wait_of_element_located('нажатие кнопки \"Save\"', dict_xpath_product_feed['8'], driver)\n        button_save_feed.click()\n        time.sleep(2)\n    \n        # 9) ожидание когда пропадет эллемент \"Feed config save\"\n        wait_notice_save = wait_of_invisibility_of_element_located('ожидание \"Feed config save\"',\n                                                                   dict_xpath_product_feed['6'], driver)\n    \n        # 10) Add feed config -> \"Load products\"\n>       button_load = wait_of_element_located('нажатие кнопки \"Load products\"', dict_xpath_product_feed['5'], driver)\n\ntest_t4/test_functional/test_7_add_feed_checkin_feed_product.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nBase/Base_functions.py:23: in wait_of_element_located\n    element = WebDriverWait(driver_init, 15).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"afea9827926168d7b80ce40e2ffec1ca\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fbfaecf2e60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x559c8ac12b13 <unknown>\nE       #1 0x559c8aa19688 <unknown>\nE       #2 0x559c8aa50cc7 <unknown>\nE       #3 0x559c8aa50e91 <unknown>\nE       #4 0x559c8aa83e34 <unknown>\nE       #5 0x559c8aa6e8dd <unknown>\nE       #6 0x559c8aa81b94 <unknown>\nE       #7 0x559c8aa6e7a3 <unknown>\nE       #8 0x559c8aa440ea <unknown>\nE       #9 0x559c8aa45225 <unknown>\nE       #10 0x559c8ac5a2dd <unknown>\nE       #11 0x559c8ac5e2c7 <unknown>\nE       #12 0x559c8ac4422e <unknown>\nE       #13 0x559c8ac5f0a8 <unknown>\nE       #14 0x559c8ac38bc0 <unknown>\nE       #15 0x559c8ac7b6c8 <unknown>\nE       #16 0x559c8ac7b848 <unknown>\nE       #17 0x559c8ac95c0d <unknown>\nE       #18 0x7faa29742609 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:90: TimeoutException","steps":[{"name":"Действие: 'ввод в поле \"Email\"'","time":{"start":1657521742236,"stop":1657521742259,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'ввод в поле \"Email\"'"},{"name":"xpath","value":"'//input[@id='email']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'ввод в поле \"Password\"'","time":{"start":1657521742507,"stop":1657521742523,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'ввод в поле \"Password\"'"},{"name":"xpath","value":"'//input[@id='password']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'нажатие кнопки \"Sing in\"'","time":{"start":1657521742681,"stop":1657521742698,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'нажатие кнопки \"Sing in\"'"},{"name":"xpath","value":"'//button[@data-test-id='login']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'выбор указанного пайплайна'","time":{"start":1657521742778,"stop":1657521743819,"duration":1041},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'выбор указанного пайплайна'"},{"name":"xpath","value":"'//div[text()='test_import_feed']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'выбор МП \"Wildberries\"'","time":{"start":1657521743889,"stop":1657521744420,"duration":531},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'выбор МП \"Wildberries\"'"},{"name":"xpath","value":"'//div[text()='Wildberries']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'выбор страницы \"Feeds list\"'","time":{"start":1657521744468,"stop":1657521744480,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'выбор страницы \"Feeds list\"'"},{"name":"xpath","value":"'//span[@aria-label='setting']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'нажатие кнопки \"Add feed\"'","time":{"start":1657521744585,"stop":1657521745110,"duration":525},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'нажатие кнопки \"Add feed\"'"},{"name":"xpath","value":"'//button[@data-test-id='add-feed']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'выбор списка \"File type\"'","time":{"start":1657521745282,"stop":1657521745814,"duration":532},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'выбор списка \"File type\"'"},{"name":"xpath","value":"'//div[@class='ant-select-selector']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'выбор из списка \"Yandex Feed\"'","time":{"start":1657521745898,"stop":1657521745919,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'выбор из списка \"Yandex Feed\"'"},{"name":"xpath","value":"'//div[@title='Yandex Feed']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'ввод в поле \"Url\" для \"Product source\"'","time":{"start":1657521745988,"stop":1657521746016,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'ввод в поле \"Url\" для \"Product source\"'"},{"name":"xpath","value":"'//input[@id='url']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'нажатие кнопки \"Save\"'","time":{"start":1657521748683,"stop":1657521748705,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'нажатие кнопки \"Save\"'"},{"name":"xpath","value":"'//button[@data-test-id='save-feed']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'ожидание \"Feed config save\"'","time":{"start":1657521750824,"stop":1657521752929,"duration":2105},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'ожидание \"Feed config save\"'"},{"name":"xpath","value":"'//div[@class='ant-message-notice-content']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Действие: 'нажатие кнопки \"Load products\"'","time":{"start":1657521752929,"stop":1657521768315,"duration":15386},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559c8ac12b13 <unknown>\n#1 0x559c8aa19688 <unknown>\n#2 0x559c8aa50cc7 <unknown>\n#3 0x559c8aa50e91 <unknown>\n#4 0x559c8aa83e34 <unknown>\n#5 0x559c8aa6e8dd <unknown>\n#6 0x559c8aa81b94 <unknown>\n#7 0x559c8aa6e7a3 <unknown>\n#8 0x559c8aa440ea <unknown>\n#9 0x559c8aa45225 <unknown>\n#10 0x559c8ac5a2dd <unknown>\n#11 0x559c8ac5e2c7 <unknown>\n#12 0x559c8ac4422e <unknown>\n#13 0x559c8ac5f0a8 <unknown>\n#14 0x559c8ac38bc0 <unknown>\n#15 0x559c8ac7b6c8 <unknown>\n#16 0x559c8ac7b848 <unknown>\n#17 0x559c8ac95c0d <unknown>\n#18 0x7faa29742609 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/python_test/python_test/Base/Base_functions.py\", line 23, in wait_of_element_located\n    element = WebDriverWait(driver_init, 15).until(\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 90, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"description","value":"'нажатие кнопки \"Load products\"'"},{"name":"xpath","value":"'//button[@data-test-id='load-products']'"},{"name":"driver_init","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"afea9827926168d7b80ce40e2ffec1ca\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":13,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"get_driver::0","time":{"start":1657521768375,"stop":1657521768488,"duration":113},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Функциональное тестирование"},{"name":"feature","value":"Тест стенд v.0.9.5"},{"name":"parentSuite","value":"test_t4.test_functional"},{"name":"suite","value":"test_7_add_feed_checkin_feed_product"},{"name":"host","value":"fv-az196-146"},{"name":"thread","value":"2845-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_t4.test_functional.test_7_add_feed_checkin_feed_product"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":6,"skipped":0,"passed":3,"unknown":0,"total":34},"items":[{"uid":"5d78c5b82cc2f360","reportUrl":"https://golosin.github.io/python_test/217//#testresult/5d78c5b82cc2f360","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558733ab4b13 <unknown>\n#1 0x5587338bb688 <unknown>\n#2 0x5587338f2cc7 <unknown>\n#3 0x5587338f2e91 <unknown>\n#4 0x558733925e34 <unknown>\n#5 0x5587339108dd <unknown>\n#6 0x558733923b94 <unknown>\n#7 0x5587339107a3 <unknown>\n#8 0x5587338e60ea <unknown>\n#9 0x5587338e7225 <unknown>\n#10 0x558733afc2dd <unknown>\n#11 0x558733b002c7 <unknown>\n#12 0x558733ae622e <unknown>\n#13 0x558733b010a8 <unknown>\n#14 0x558733adabc0 <unknown>\n#15 0x558733b1d6c8 <unknown>\n#16 0x558733b1d848 <unknown>\n#17 0x558733b37c0d <unknown>\n#18 0x7f70da0a0609 <unknown>","time":{"start":1657435073845,"stop":1657435099211,"duration":25366}},{"uid":"271fe55a5ef3a499","reportUrl":"https://golosin.github.io/python_test/216//#testresult/271fe55a5ef3a499","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55fdc4351b13 <unknown>\n#1 0x55fdc4158688 <unknown>\n#2 0x55fdc418fcc7 <unknown>\n#3 0x55fdc418fe91 <unknown>\n#4 0x55fdc41c2e34 <unknown>\n#5 0x55fdc41ad8dd <unknown>\n#6 0x55fdc41c0b94 <unknown>\n#7 0x55fdc41ad7a3 <unknown>\n#8 0x55fdc41830ea <unknown>\n#9 0x55fdc4184225 <unknown>\n#10 0x55fdc43992dd <unknown>\n#11 0x55fdc439d2c7 <unknown>\n#12 0x55fdc438322e <unknown>\n#13 0x55fdc439e0a8 <unknown>\n#14 0x55fdc4377bc0 <unknown>\n#15 0x55fdc43ba6c8 <unknown>\n#16 0x55fdc43ba848 <unknown>\n#17 0x55fdc43d4c0d <unknown>\n#18 0x7f10aa30c609 <unknown>","time":{"start":1657348614379,"stop":1657348638897,"duration":24518}},{"uid":"3fd62672150075b6","reportUrl":"https://golosin.github.io/python_test/215//#testresult/3fd62672150075b6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5638a7430b13 <unknown>\n#1 0x5638a7237688 <unknown>\n#2 0x5638a726ecc7 <unknown>\n#3 0x5638a726ee91 <unknown>\n#4 0x5638a72a1e34 <unknown>\n#5 0x5638a728c8dd <unknown>\n#6 0x5638a729fb94 <unknown>\n#7 0x5638a728c7a3 <unknown>\n#8 0x5638a72620ea <unknown>\n#9 0x5638a7263225 <unknown>\n#10 0x5638a74782dd <unknown>\n#11 0x5638a747c2c7 <unknown>\n#12 0x5638a746222e <unknown>\n#13 0x5638a747d0a8 <unknown>\n#14 0x5638a7456bc0 <unknown>\n#15 0x5638a74996c8 <unknown>\n#16 0x5638a7499848 <unknown>\n#17 0x5638a74b3c0d <unknown>\n#18 0x7fda88398609 <unknown>","time":{"start":1657262372016,"stop":1657262396791,"duration":24775}},{"uid":"f6dbe78054a1a4c9","reportUrl":"https://golosin.github.io/python_test/214//#testresult/f6dbe78054a1a4c9","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5569d0b8bb13 <unknown>\n#1 0x5569d0992688 <unknown>\n#2 0x5569d09c9cc7 <unknown>\n#3 0x5569d09c9e91 <unknown>\n#4 0x5569d09fce34 <unknown>\n#5 0x5569d09e78dd <unknown>\n#6 0x5569d09fab94 <unknown>\n#7 0x5569d09e77a3 <unknown>\n#8 0x5569d09bd0ea <unknown>\n#9 0x5569d09be225 <unknown>\n#10 0x5569d0bd32dd <unknown>\n#11 0x5569d0bd72c7 <unknown>\n#12 0x5569d0bbd22e <unknown>\n#13 0x5569d0bd80a8 <unknown>\n#14 0x5569d0bb1bc0 <unknown>\n#15 0x5569d0bf46c8 <unknown>\n#16 0x5569d0bf4848 <unknown>\n#17 0x5569d0c0ec0d <unknown>\n#18 0x7f3cfcbed609 <unknown>","time":{"start":1657176056881,"stop":1657176081584,"duration":24703}},{"uid":"9bc86ad7be13be82","reportUrl":"https://golosin.github.io/python_test/213//#testresult/9bc86ad7be13be82","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ce7d9e0b13 <unknown>\n#1 0x55ce7d7e7688 <unknown>\n#2 0x55ce7d81ecc7 <unknown>\n#3 0x55ce7d81ee91 <unknown>\n#4 0x55ce7d851e34 <unknown>\n#5 0x55ce7d83c8dd <unknown>\n#6 0x55ce7d84fb94 <unknown>\n#7 0x55ce7d83c7a3 <unknown>\n#8 0x55ce7d8120ea <unknown>\n#9 0x55ce7d813225 <unknown>\n#10 0x55ce7da282dd <unknown>\n#11 0x55ce7da2c2c7 <unknown>\n#12 0x55ce7da1222e <unknown>\n#13 0x55ce7da2d0a8 <unknown>\n#14 0x55ce7da06bc0 <unknown>\n#15 0x55ce7da496c8 <unknown>\n#16 0x55ce7da49848 <unknown>\n#17 0x55ce7da63c0d <unknown>\n#18 0x7fb20d50e609 <unknown>","time":{"start":1657089577865,"stop":1657089602675,"duration":24810}},{"uid":"c70f630a8c1cbe04","reportUrl":"https://golosin.github.io/python_test/212//#testresult/c70f630a8c1cbe04","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1657003147708,"stop":1657003206365,"duration":58657}},{"uid":"2c755815b8aea7d1","reportUrl":"https://golosin.github.io/python_test/211//#testresult/2c755815b8aea7d1","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656917061424,"stop":1656917122766,"duration":61342}},{"uid":"f459359ae72e6f34","reportUrl":"https://golosin.github.io/python_test/210//#testresult/f459359ae72e6f34","status":"failed","statusDetails":"AssertionError: проверка что добавленный товар найден в таблице \"Feed products\"\nassert 42840.0 <= 120","time":{"start":1656830222294,"stop":1656830287474,"duration":65180}},{"uid":"11fa4989b3dfdf2b","reportUrl":"https://golosin.github.io/python_test/209//#testresult/11fa4989b3dfdf2b","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656743801832,"stop":1656743862548,"duration":60716}},{"uid":"966049ade6372a45","reportUrl":"https://golosin.github.io/python_test/208//#testresult/966049ade6372a45","status":"failed","statusDetails":"AssertionError: проверка что добавленный товар найден в таблице \"Feed products\"\nassert 86340.0 <= 120","time":{"start":1656657653765,"stop":1656657717012,"duration":63247}},{"uid":"b1b6c122bbd2333a","reportUrl":"https://golosin.github.io/python_test/207//#testresult/b1b6c122bbd2333a","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656571355590,"stop":1656571414634,"duration":59044}},{"uid":"f40d797c88aa5796","reportUrl":"https://golosin.github.io/python_test/206//#testresult/f40d797c88aa5796","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656484787568,"stop":1656484851538,"duration":63970}},{"uid":"35ee279ba1e0110a","reportUrl":"https://golosin.github.io/python_test/205//#testresult/35ee279ba1e0110a","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656398417539,"stop":1656398476160,"duration":58621}},{"uid":"90cc0ac741c6bb8e","reportUrl":"https://golosin.github.io/python_test/204//#testresult/90cc0ac741c6bb8e","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656312295020,"stop":1656312360417,"duration":65397}},{"uid":"e9577aa34d0c745e","reportUrl":"https://golosin.github.io/python_test/203//#testresult/e9577aa34d0c745e","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656225384051,"stop":1656225444767,"duration":60716}},{"uid":"bf27496359f6d45","reportUrl":"https://golosin.github.io/python_test/202//#testresult/bf27496359f6d45","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656139017786,"stop":1656139080600,"duration":62814}},{"uid":"e2986830307d0a42","reportUrl":"https://golosin.github.io/python_test/201//#testresult/e2986830307d0a42","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656082045919,"stop":1656082101957,"duration":56038}},{"uid":"f57863da3eb94ca1","reportUrl":"https://golosin.github.io/python_test/200//#testresult/f57863da3eb94ca1","status":"failed","statusDetails":"AssertionError: \"Sale\" в таблице \"Feed products\" д.б. равен \"price\" в YML feed\nassert '1000' == '1100'\n  - 1100\n  ? -\n  + 1000\n  ?    +","time":{"start":1656080858131,"stop":1656080911245,"duration":53114}},{"uid":"f8ed6fed00a28966","reportUrl":"https://golosin.github.io/python_test/199//#testresult/f8ed6fed00a28966","status":"passed","time":{"start":1656080277518,"stop":1656080332759,"duration":55241}},{"uid":"c56d8ab7ec24dcbf","reportUrl":"https://golosin.github.io/python_test/198//#testresult/c56d8ab7ec24dcbf","status":"passed","time":{"start":1656079893010,"stop":1656079949518,"duration":56508}}]},"tags":[]},"source":"adc6ae8ee18a5a59.json","parameterValues":[]}